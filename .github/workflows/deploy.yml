name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # === BACKEND - EC2_1 ===
    - name: Copy backend to EC2 Instance 1
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./backend"
        target: "/home/${{ secrets.EC2_USER }}/backend"

    - name: Deploy backend on EC2 Instance 1
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/backend
          docker rm -f backend-container || true
          docker rmi backend-image || true
          docker build -t backend-image .
          docker run -d \
            --name backend-container \
            -p 5000:5000 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            backend-image

    # === FRONTEND - EC2_2 ===
    - name: Copy frontend to EC2 Instance 2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./frontend"
        target: "/home/${{ secrets.EC2_USER }}/frontend"

    - name: Deploy frontend on EC2 Instance 2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/frontend
          echo "REACT_APP_API_URL=http://${{ secrets.EC2_1_HOST }}:5000" > .env
          docker rm -f frontend-container || true
          docker rmi frontend-image || true
          docker build -t frontend-image .
          docker run -d --name frontend-container -p 80:80 frontend-image
